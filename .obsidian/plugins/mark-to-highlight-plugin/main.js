/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var l=Object.defineProperty;var h=Object.getOwnPropertyDescriptor;var p=Object.getOwnPropertyNames;var u=Object.prototype.hasOwnProperty;var m=(a,n)=>{for(var t in n)l(a,t,{get:n[t],enumerable:!0})},w=(a,n,t,i)=>{if(n&&typeof n=="object"||typeof n=="function")for(let s of p(n))!u.call(a,s)&&s!==t&&l(a,s,{get:()=>n[s],enumerable:!(i=h(n,s))||i.enumerable});return a};var S=a=>w(l({},"__esModule",{value:!0}),a);var v={};m(v,{default:()=>o});module.exports=S(v);var e=require("obsidian"),k={mySetting:"default"},o=class extends e.Plugin{async onload(){await this.loadSettings(),this.addCommand({id:"convert-highlight",name:"Convert ==xxx== to <mark>xxx</mark>",editorCallback:(t,i)=>{let g=t.getValue().replace(/==(.+?)==/g,"<mark>$1</mark>");t.setValue(g),new e.Notice("All highlights converted!")}}),this.onEditHandler=(0,e.debounce)(()=>{let t=this.app.workspace.getActiveViewOfType(e.MarkdownView);if(t){let i=t.editor,s=i.getCursor(),g=i.getLine(s.line),d=/==([^=]+)==/g;if(d.test(g)){let c=g.replace(d,"<mark>$1</mark>");i.setLine(s.line,c),new e.Notice("Highlight converted automatically!")}}},500),this.registerEvent(this.app.workspace.on("editor-change",this.onEditHandler)),this.addSettingTab(new r(this.app,this))}onunload(){console.log("Unloading Mark2HighlightPlugin")}async loadSettings(){this.settings=Object.assign({},k,await this.loadData())}async saveSettings(){await this.saveData(this.settings)}},r=class extends e.PluginSettingTab{constructor(t,i){super(t,i);this.plugin=i}display(){let{containerEl:t}=this;t.empty(),new e.Setting(t).setName("Sample Setting").setDesc("This is a sample setting.").addText(i=>i.setPlaceholder("Enter your setting value").setValue(this.plugin.settings.mySetting).onChange(async s=>{this.plugin.settings.mySetting=s,await this.plugin.saveSettings()}))}};
